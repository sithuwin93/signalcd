swagger: "2.0"
info:
  description: "Swagger 2.0 specification for SignalCD"
  version: "v0.0.0"
  title: "SignalCD Swagger Spec"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:6660"
basePath: "/api/v1"
tags:
  - name: "pipeline"
    description: "manage pipelines"
schemes:
  - "https"
  - "http"
consumes:
  - application/json
produces:
  - application/json
paths:
  /deployments:
    get:
      tags:
        - "deployments"
      summary: "Returns the history of deployments"
      operationId: "deployments"
      responses:
        200:
          description: "OK"
          schema:
            type: array
            items:
              $ref: '#/definitions/deployment'
        500:
          description: "internal server error"
  /deployments/current:
    get:
      tags:
        - "deployments"
      summary: "Returns the currently active deployment"
      operationId: "currentDeployment"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/deployment'
    post:
      tags:
        - "deployments"
      summary: "Schedule a new deployment"
      operationId: "setCurrentDeployment"
      parameters:
        - in: query
          required: true
          name: "pipeline"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/deployment'
        500:
          description: "internal server error"
  /pipelines:
    get:
      tags:
        - "pipeline"
      summary: "returns a list of all pipelines"
      operationId: "pipelines"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/pipeline"
        400:
          description: "bad request"
        500:
          description: "internal server error"
    post:
      tags:
        - "pipeline"
      summary: "creates a new pipeline"
      operationId: "create"
      parameters:
        - in: body
          name: pipeline
          description: "The pipeline to be created"
          schema:
            $ref: '#/definitions/pipeline'
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/pipeline'
        500:
          description: "internal server error"
  /pipelines/{id}:
    get:
      tags:
        - "pipeline"
      summary: "returns a pipeline by id"
      operationId: "pipeline"
      parameters:
        - in: "path"
          required: true
          name: "id"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/pipeline"
        400:
          description: "bad request"
        500:
          description: "internal server error"
definitions:
  deployment:
    required:
      - number
    properties:
      number:
        type: number
        format: int64
      created:
        type: string
        format: 'date-time'
      started:
        type: string
        format: 'date-time'
      finished:
        type: string
        format: 'date-time'
      status:
        $ref: '#/definitions/deploymentstatus'
      pipeline:
        $ref: '#/definitions/pipeline'
  deploymentstatus:
    properties:
      phase:
        type: string
        enum:
          - unknown
          - success
          - failure
          - progress
  pipeline:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      steps:
        type: array
        items:
          $ref: '#/definitions/step'
      checks:
        type: array
        items:
          $ref: '#/definitions/check'
      created:
        type: string
        format: 'date-time'
  step:
    required:
      - name
      - image
    properties:
      name:
        type: string
      image:
        type: string
      imagePullSecrets:
        type: array
        items:
          type: string
      commands:
        type: array
        items:
          type: string
      status:
        type: object
        properties:
          started:
            type: string
            format: 'date-time'
          finished:
            type: string
            format: 'date-time'
          phase:
            type: string
            enum:
              - unknown
              - success
              - failure
              - progress
              - pending
              - killed
          logs:
            type: string
  check:
    required:
      - name
      - image
    properties:
      name:
        type: string
      image:
        type: string
      imagePullSecrets:
        type: array
        items:
          type: string
      duration:
        type: number
      environment:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
