// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/signalcd/signalcd/api/v1/models"
)

// AgentsOKCode is the HTTP code returned for type AgentsOK
const AgentsOKCode int = 200

/*AgentsOK OK

swagger:response agentsOK
*/
type AgentsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Agent `json:"body,omitempty"`
}

// NewAgentsOK creates AgentsOK with default headers values
func NewAgentsOK() *AgentsOK {

	return &AgentsOK{}
}

// WithPayload adds the payload to the agents o k response
func (o *AgentsOK) WithPayload(payload []*models.Agent) *AgentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the agents o k response
func (o *AgentsOK) SetPayload(payload []*models.Agent) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AgentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Agent, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// AgentsInternalServerErrorCode is the HTTP code returned for type AgentsInternalServerError
const AgentsInternalServerErrorCode int = 500

/*AgentsInternalServerError internal server error

swagger:response agentsInternalServerError
*/
type AgentsInternalServerError struct {
}

// NewAgentsInternalServerError creates AgentsInternalServerError with default headers values
func NewAgentsInternalServerError() *AgentsInternalServerError {

	return &AgentsInternalServerError{}
}

// WriteResponse to the client
func (o *AgentsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
